// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PendingUser {
  id        String   @id @default(uuid())
  username  String
  email     String
  password  String
  createdAt DateTime @default(now())
}

model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  image     String?
  posts     Post[]
  comments  Comment[]
  updoots   Updoot[]
}

model Post {
  id               Int           @id @default(autoincrement())
  title            String
  content          String?
  latitude         Float
  longitude        Float
  locationName     String?
  fullLocationName String?
  image            String?
  points           Int           @default(0)
  flagged          Boolean       @default(false)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  author           User          @relation(fields: [authorId], references: [id])
  authorId         Int
  flaggedPosts     FlaggedPost[]
  comments         Comment[]
  updoots          Updoot[]
}

model FlaggedPost {
  id        Int      @id @default(autoincrement())
  reason    String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Updoot {
  id        Int      @default(autoincrement())
  value     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  @@id([postId, userId])
}
